# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI|CD
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - name: Install package for node_modules
      run: yarn
      
    - name: Running test coverage
      run: yarn test:coverage
      
    # - name: Find lcov-report.txt
    #   run: |
    #     COVERAGE_FILE=$(find . -type f -path "./coverage/lcov-report/lcov-report.txt" | head -n 1)
    #     if [ -z "$COVERAGE_FILE" ]; then
    #       echo "Error: lcov-report.txt not found"
    #       exit 1
    #     fi
    #     COVERAGE=$(grep -oP "Statements\s*:\s*\K[0-9]+" "$COVERAGE_FILE")
    #     if [ "$COVERAGE" -lt 85 ]; then
    #       echo "Error: Coverage is less than 85%"
    #       exit 1
    #     fi
        
  upload-coverage:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v1
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}
    # - name: Build project
    #   run: yarn build
    # - name: Deploy
    #   run: |
    #     git config --global user.name $user_name
    #     git config --global user.email $user_email
    #     git remote set-url origin https://${github_token}@github.com/${repository}
    #     npm run deploy
    #   env:
    #     user_name: 'github-actions[bot]'
    #     user_email: 'github-actions[bot]@users.noreply.github.com'
    #     github_token: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
    #     repository: ${{ github.repository }}
